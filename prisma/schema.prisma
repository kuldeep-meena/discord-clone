datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}


model Profile {
   id  String @id @default(uuid())
   userId String @unique
   name String 
   imageUrl String @db.Text
   email String @db.Text

   servers Server[]
   members Member[]
   channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server{
id String @id @default(uuid())
name String
imageUrl String
inviteCode String @db.Text

//connecting server model to profile model//

profileId String
profile Profile @relation(fields:[profileId],references:[id],onDelete:Cascade)

members Member[]
 channels Channel[]

createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

@@index([profileId])

}

//each server is going to have a member and each member is gonna have its role//

enum MemberRole{
ADMIN
MODERATOR
GUEST
}

//creating a model member//

model Member{
  id String @id @default(uuid())
  role MemberRole @default(GUEST)


  profileId String
  profile Profile @relation(fields:[profileId],references:[id],onDelete:Cascade)


serverId String
server Server @relation(fields:[serverId],references:[id],onDelete:Cascade)

createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt


  @@index([profileId])
   @@index([serverId])
}


//types of channel Type//

enum ChannelType{
TEXT
AUDIO
VIDEO
}

model Channel{
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)


profileId String
 profile Profile @relation(fields:[profileId],references:[id],onDelete:Cascade)

 serverId String
server Server @relation(fields:[serverId],references:[id],onDelete:Cascade)

 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 
   @@index([profileId])
   @@index([serverId])
}